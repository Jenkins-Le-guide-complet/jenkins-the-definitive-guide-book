<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="chapter-notification">
  <title>Notification</title>
  <sect1 id="sect-notification-introduction">
    <title>Introduction</title>
    <para><indexterm id="I_indexterm8_d1e11406" significance="normal"><primary>notifications</primary></indexterm>Bien qu'il soit important que votre serveur de build construise votre
    logiciel, il est encore plus important que votre serveur de build signale aux personnes
    quand il ne peut le faire. Une part importante de la proposition de valeur de tout
    environnement d'intégration continue est d'améliorer le flux d'information
    sur la santé de votre projet, que ce soit des tests d'intégration échoués ou des régressions
    dans la suite des tests d'intégration, ou d'autres problèmes de qualité comme une
    baisse dans la couverture de code ou de métriques de qualité de code. Dans tous les cas, un serveur d'intégration continue
    doit permettre aux bonnes personnes de connaitre les nouveaux problèmes, et il doit pouvoir le
    faire rapidement. C'est ce que nous appelons Notification.</para>
    <para>Il y a deux principales catégories de stratégies de notification, que
    j'appelle<indexterm id="I_indexterm8_d1e11412" significance="normal"><primary>notifications</primary><secondary>passive (pull)</secondary></indexterm><indexterm id="I_indexterm8_d1e11417" significance="normal"><primary>notifications passives (pull)</primary></indexterm> <emphasis>passive</emphasis> et <emphasis><indexterm id="I_indexterm8_d1e11425" significance="normal"><primary>notifications actives (push)</primary></indexterm><indexterm id="I_indexterm8_d1e11428" significance="normal"><primary>notifications</primary><secondary>notifications actives (push)</secondary></indexterm>active</emphasis> (ou
    <emphasis>pull</emphasis>/<emphasis>push</emphasis>). Les notifications passives
    (pull) demandent aux développeurs de consulter consciemment le statut du dernier
    build, et comprennent les flux RSS, les radiateurs de build, et (dans une certaine mesure)
    les e-mails. Les notifications actives (push) vont alerter les développeurs de manière pro-active
    quand un build échoue, et comprennent des méthodes telles que des notificateurs intégrés au bureau, le chat,
    et SMS. Les deux approches ont leurs points positifs et négatifs. Les stratégies
    de notifications passives telles que les radiateurs de build peuvent diffuser une connaissance
    générale sur les builds échoués, et aider à installer une culture d'équipe où
    la correction des builds cassés revêt une haute priorité. Des formes plus directes de
    notification peuvent encourager activement les développeurs à prendre les choses en
    mains propres et corriger les builds cassés plus rapidement.</para>
  </sect1>
  <sect1 id="sect-notification-email">
    <title>Notification email</title>
    <para>La notification <indexterm class="startofrange" id="ch08-email1" significance="normal"><primary>notifications</primary><secondary>email</secondary></indexterm><indexterm class="startofrange" id="ch08-email2" significance="normal"><primary>notifications email</primary></indexterm>email est la forme la plus évidente et la plus commune de
    notification. L'email est bien connu, omniprésent, facile à utiliser et facile à
    configurer (voir <xref linkend="sect-configuration-email"/>). Donc, quand
    les équipes mettent en place leur premier environnement d'intégration continue, c'est généralement
    la stratégie de notification initiale qu'ils essaient.</para>
    <para>Vous activez les notifications email dans Jenkins en cochant la case Notification
    par email et en fournissant la liste d'adresses email des
    personnes qui doivent être notifiées (voir <xref linkend="fig-hudson-email-configuration"/>). Par défaut, Jenkins
    enverra un email pour <indexterm id="I_indexterm8_d1e11461" significance="normal"><primary>tâches de build</primary><secondary>échoués</secondary><tertiary>notifications pour</tertiary></indexterm><indexterm id="I_indexterm8_d1e11468" significance="normal"><primary>tâches de build</primary><secondary>build instable de</secondary><tertiary>notifications pour</tertiary></indexterm><indexterm id="I_indexterm8_d1e11475" significance="normal"><primary>builds instables</primary><secondary>notifications pour</secondary></indexterm>chaque build échoué ou instable. Rappelez-vous, il enverra aussi
    un nouvel email dès le premier build réussi après une série de builds échoués ou
    instables, pour indiquer que le problème a été résolu.</para>
    <figure float="0" id="fig-hudson-email-configuration">
      <title>Configurer les notifications email</title>
      <mediaobject id="I_mediaobject8_d1e11484">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0801.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0801.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Normallement, un build ne devrait pas prendre trop d'essais pour fonctionner à
    nouveau—les développeurs doivent diagnostiquer et reproduire le problème localement, le corriger
    localement, et alors seulement commiter leur correction dans le contrôle de version. Des erreurs répétées
    de build indiquent généralement soit une erreur de configuration chronique soit des mauvaises
    pratiques de développement (par exemple, des développeurs committant les modifications sans
    vérifier que cela fonctionne localement d'abord).</para>
    <para>Vous pouvez également choisir d'envoyer un email distinct à tous les développeurs qui ont
    des changements committés dans le build échoué. C'est généralement une bonne idée, car
    les développeurs qui ont committés des changements depuis le dernier build sont naturellement
    les personnes qui devraient être les plus intéressées par les résultats du build. Jenkins
    va récupérer l'adresse email de l'utilisateur à partir du domaine de sécurité courament
    configuré (voir <xref linkend="sect-security-realms"/>), ou en
    dérivant l'adresse email à partir de l'utilisateur du contrôle de version si vous l'avez configuré
    (voir <xref linkend="sect-configuration-email"/>).</para>
    <para>Si vous utilisez cette option, il peut être moins utile d'inclure l'équipe
    entière dans la liste de distribution principale. Vous inclurez de préférence les personnes
    qui seront intéressées par le suivi du résultat de chaque build (tels que
    les responsables techniques), et laisser Jenkins informer les développeurs <phrase role="keep-together">contributeurs</phrase> directement.</para>
    <para>Cela implique que les changements ont provoqué l'échec du build,
    ce qui est généralement (mais pas toujours) le cas. Cependant, si les builds sont
    peu fréquent (par exemple les builds nocturnes, ou si un build est en attente pendant
    plusieurs heures avant d'être abandonné), de nombreux changements peuvent être
    committés, et il est alors difficile de savoir lequel était en fait responsable
    de l'échec du build.</para>
    <para>Tous les builds ne sont pas semblables quand aux notifications email.
    Les développeurs ayant committés des changements sont particulièrement intéressés par les résultats
    des builds de tests unitaires et d'intégration (surtout ceux déclenchés par
    leurs propres changements), alors que les testeurs seront plus intéressés par
    jeter un coup d'oeil sur le statut des tests d'acceptance automatisés. Donc la
    confuguration des notifications email sera différente pour chaque tâche de build. En fait, il
    est utile de définir une stratégie de notification email. Un exemple d'une telle
    stratégie de notification email est donné comme suit:</para>
    <itemizedlist>
      <listitem>
        <para>Builds rapides (tests unitaires/d'intégration, s'exécutent en moins de 5
        minutes): les notifications sont envoyées aux chefs d'équipes et aux développeurs
        qui ont committés des changements.</para>
      </listitem>
      <listitem>
        <para>Builds lents (builds de tests d'acceptance, s'exécutent après les builds
        rapides): les notifications sont envoyées aux chefs d'équipes, aux testeurs et aux développeurs
        qui ont committés des changements.</para>
      </listitem>
      <listitem>
        <para>Builds noctures (métriques de qualité, tests de performance et autres; s'exécutent uniquement
        si les autres builds fonctionnent): tous les membres d'équipe—Ceux-ci fournissent une
        photo instantanée de la santé du projet avant la réunion quotidienne.</para>
      </listitem>
    </itemizedlist>
    <para>En fait, vous devriez considérer quelle stratégie de notification est
    appropriée pour chaque tâche de build au cas par cas, plutôt que
    l'application d'une politique globale pour toutes les tâches de build.</para>
  </sect1>
  <sect1 id="sect-notification-advanced-email">
    <title>Notification par email avancée</title>
    <para>Par défaut, les notifications par email Jenkins sont un outil plutôt brut.
    Les messages de notification sont toujours envoyés au même groupe de
    personnes. Vous ne pouvez pas envoyer des messages à différentes personnes en fonction de ce
    qui a mal tourné, ou mettre en œuvre toute sorte de politique d'escalade. Il serait
    utile, par exemple, d'être en mesure de notifier les développeurs qui ont committés
    les modifications la première fois qu'un build échoue, et envoyer un message différent au
    chef d'équipe ou à l'équipe entière si le build échoue une seconde fois</para>
    <para>Le<indexterm class="startofrange" id="ch08-ext1" significance="normal"><primary>plugins</primary><secondary>Email-ext</secondary></indexterm><indexterm class="startofrange" id="ch08-ext2" significance="normal"><primary>plugin Email-ext</primary></indexterm> plugin Email-ext vous permet de définir un stratégie de notification email plus
    fine. Ce plugin ajoute une case Editable Email Notification
    (voir <xref linkend="fig-hudson-email-ext-configuration"/>),
    qui remplace efficacement la notification par email standard de Jenkins. Ainsi,
    vous pouvez définir une liste de destinataire par défaut et affiner le contenu du
    message électronique, et aussi définir une stratégie de notification plus précise avec les
    différents messages et les listes de destinataires pour les différents événements. Notez qu'une
    fois que vous avez installé et configuré ce plugin pour votre tâche de build, vous
    pouvez désactiver la configuration normale de notification email.</para>
    <figure float="none" id="fig-hudson-email-ext-configuration">
      <title>Configurer les notifications email avancées</title>
      <mediaobject id="I_mediaobject8_d1e11539">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0802.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0802.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Ce plugin a deux fonctionnalités liées mais distinctes. Tout d'abord,
    il vous permet de personnaliser le message de notification par email. Vous pouvez choisir parmi
    un grand nombre de mots clés prédéfinis pour créer vos propres titre et corps du message
    personnalisés. Vous incluez un mot clé dans votre modèle de message en utilisant la
    notation familière dollar (e.g., <literal moreinfo="none">${BUILD_NUMBER}</literal> ou
    <literal moreinfo="none">$BUILD_NUMBER)</literal>. Certains mots clés acceptent des paramètres,
    que vous pouvez spécifier en utilisant le format <literal moreinfo="none">name=value</literal> (e.g.,
    <literal moreinfo="none">${BUILD_LOG, maxLines=100}</literal> ou <literal moreinfo="none">${ENV,
    var="PATH"}</literal>). Les mots clés les plus utiles sont:</para>
    <variablelist>
      <varlistentry>
        <term>
          <literal moreinfo="none">${DEFAULT_SUBJECT}</literal>
        </term>
        <listitem>
          <para>Le sujet par défaut configuré dans la page de configuration Jenkins</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal moreinfo="none">${DEFAULT_CONTENT}</literal>
        </term>
        <listitem>
          <para>Le corps du message par défaut configuré dans la page de configuration Jenkins</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal moreinfo="none">${PROJECT_NAME}</literal>
        </term>
        <listitem>
          <para>Le nom du projet</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal moreinfo="none">${BUILD_NUMBER}</literal>
        </term>
        <listitem>
          <para>Le numéro de build courant</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal moreinfo="none">${BUILD_STATUS}</literal>
        </term>
        <listitem>
          <para>Le statut du build courant (échec, succès, etc.)</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal moreinfo="none">${CAUSE}</literal>
        </term>
        <listitem>
          <para>La cause du build</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal moreinfo="none">${BUILD_URL}</literal>
        </term>
        <listitem>
          <para>Un lien vers la page correspondante du build sur Jenkins</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal moreinfo="none">${FAILED_TESTS}</literal>
        </term>
        <listitem>
          <para>Information sur les tests unitaires échoués, si certains ont
          échoués</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal moreinfo="none">${CHANGES}</literal>
        </term>
        <listitem>
          <para>Changements effectués depuis le dernier build</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal moreinfo="none">${CHANGES_SINCE_LAST_SUCCESS}</literal>
        </term>
        <listitem>
          <para>Tous les changements effectués depuis le dernier build avec succès</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>Vous pouvez obtenir une liste complète des mots clés disponibles, et les options pour
    ceux qui acceptent des paramètres, en cliquant sur l'icône d'aide en face de 
    Contexte Token Reference.</para>
    <para>Le bouton Avancé vous permet de définir une statégie de notification
    plus sophistiquée, basée sur le concept de triggers (voir <xref linkend="fig-email-notification-triggers"/>). Les triggers <indexterm id="I_indexterm8_d1e11638" significance="normal"><primary>tâches de build</primary><secondary>échoué</secondary><tertiary>notifications pour</tertiary></indexterm><indexterm id="I_indexterm8_d1e11645" significance="normal"><primary>tâche de build</primary><secondary>build instable de</secondary><tertiary>notifications pour</tertiary></indexterm><indexterm id="I_indexterm8_d1e11652" significance="normal"><primary>builds instables</primary><secondary>notifications pour</secondary></indexterm>déterminent quand les notifications email doivent être envoyées.
    Les triggers supportés sont les suivants:</para>
    <variablelist>
      <varlistentry>
        <term>Failure</term>
        <listitem>
          <para>Chaque fois qu'un build échoue.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Still Failing</term>
        <listitem>
          <para>Pour tous les builds en échec suivants.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Unstable</term>
        <listitem>
          <para>Chaque fois qu'un build est instable.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Still Unstable</term>
        <listitem>
          <para>Pour tous les builds instables suivants.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Success</term>
        <listitem>
          <para>Pour chaque build avec succès.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Fixed</term>
        <listitem>
          <para>Quand un build passe d'échec ou instable à
          succès.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Before Build</term>
        <listitem>
          <para>Avant chaque début de build.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <figure float="0" id="fig-email-notification-triggers">
      <title>Configurer les triggers de notification email</title>
      <mediaobject id="I_mediaobject8_d1e11704">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0803.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0803.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Vous pouvez configurer autant (ou aussi peu) de triggers que vous le souhaitez. La
    liste des destinataires et le modèle de message peuvent être personnalisés pour chaque
    trigger, par exemple en utilisant les triggers Still Failing et
    Still Unstable, vous pouvez mettre en place une stratégie de notification qui avertit que
    développeur ayant committé des changements la première fois qu'une tâche de build échoue, mais
    continue à informer le chef d'équipe si elle échoue une seconde fois. Vous pouvez
    choisir d'envoyer le message uniquement à des développeurs qui ont committés lors
    du build («Send to committers"), ou d'inclure également tous ceux qui ont
    committés depuis le dernier build avec succès. Cela assure que
    tous ceux qui peuvent être impliqués dans l'échec du build seront
    notifiés de manière <phrase role="keep-together">appropriée</phrase>.</para>
    <para>Vous pouvez également personnaliser le contenu du message en cliquant sur
    l'option More Configuration (comme indiqué pour le trigger Still Failing dans <xref linkend="fig-email-notification-triggers"/>). De cette façon, vous pouvez personnaliser
    des messages différents qui seront envoyés dans des cas distincts.</para>
    <para>Les triggers interagissent intelligement entre eux. Donc, si vous configurez à la fois le
    trigger Failing et le trigger Still Failing, seul le trigger Still Failing
    sera activé lors du second échec de build.</para>
    <para>Un exemple d'un tel message personnalisé est illustré dans <xref linkend="fig-hudson-email-notification-message"/>.</para>
    <figure float="0" id="fig-hudson-email-notification-message">
      <title>Message de notification personnalisé</title>
      <mediaobject id="I_mediaobject8_d1e11728">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0804.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0804.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Globalement, toutefois, comme stratégie de notification, l'email n'est pas sans
    défaut. Certains développeurs ferment leurs clients de messagerie par moment afin
    d'éviter d'être interrompu. Dans les grandes organisations, le nombre d'emails
    qui arrivent chaque jour peut être considérable, et les notifications d'échec de
    de build peuvent être cachées parmi une foule d'autres messages moins importants.
    Donc les échecs de build peuvent ne pas avoir toujours l'attention prioritaire qu'ils
    demandent dans un environnement d'intégration continue finement réglé. Dans les sections suivantes, nous
    nous pencherons sur certaines stratégies de notification autres qui peuvent être utilisées pour augmenter
    la sensibilisation des équipes sur les builds échoués et encourager les développeurs à les corriger<indexterm id="I_indexterm8_d1e11735" class="endofrange" startref="ch08-ext1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e11737" class="endofrange" startref="ch08-ext2" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e11739" class="endofrange" startref="ch08-email1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e11741" class="endofrange" startref="ch08-email2" significance="normal"><primary>notifications email</primary></indexterm> plus vite.</para>
  </sect1>
  <sect1 id="sect-notification-claiming">
    <title>Revendiquer des builds</title>
    <para>Quand<indexterm id="I_indexterm8_d1e11750" significance="normal"><primary>tâches de build</primary><secondary>échoués</secondary><tertiary>revendiquer</tertiary></indexterm><indexterm id="I_indexterm8_d1e11757" significance="normal"><primary>revendiquer des builds échoués</primary></indexterm><indexterm id="I_indexterm8_d1e11760" significance="normal"><primary>utilisateurs</primary><secondary>revendiquer des builds échoués</secondary></indexterm> un build échoue, il peut être utile de savoir que quelqu'un
    a repéré le problème et travaille dessus. Cela évite d'avoir plus d'un
    développeur gaspillant son temps à essayer de corriger le problème
    séparément.</para>
    <para>Le plugin Claim permet aux développeurs d'indiquer qu'ils se sont
    appropriés un build échoué, et qu'ils essaient de le corriger. Vous pouvez
    installer ce plugin de manière habituelle. Une fois installé, les développeurs peuvent revendiquer
    un build échoué comme le leur, et éventuellement ajouter un commentaire pour expliquer la
    cause suspectée du build et de ce que le développeur a l'intention de faire à son sujet.
    Le build revendiqué sera alors marqué comme tel dans l'histoire des builds, de sorte
    que les autres développeurs peuvent éviter de gaspiller inutilement du temps à
    investiguer.</para>
    <para>Pour activer la revendication pour une tâche de build, vous devez cocher la case “Allow
    broken build claiming” dans la page de configuration de la tâche de build. Alors,
    vous pourrez revendiquer un build cassé dans la page de détails
    du build (voir <xref linkend="fig-hudson-notification-claim"/>).
    Les builds revendiqués seront affichés avec une icône dans l'historique des builds indiquant qu'ils
    ont été revendiqués. Vous pouvez aussi effectuer une revendication de build “sticky,” afin que
    tous les échecs ultérieurs de build pour cette tâche seront aussi automatiquement
    revendiqués par ce développeur, jusqu'à ce que le problème soit résolu.</para>
    <figure float="0" id="fig-hudson-notification-claim">
      <title>Revendiquer un build échoué</title>
      <mediaobject id="I_mediaobject8_d1e11775">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0805.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0805.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
  </sect1>
  <sect1 id="sect-notification-rss">
    <title>Fils RSS</title>
    <para>Jenkins<indexterm class="startofrange" id="ch08-rss1" significance="normal"><primary>fils RSS, des résultats de build</primary></indexterm><indexterm class="startofrange" id="ch08-rss2" significance="normal"><primary>rapporter</primary><secondary>résultats de test</secondary><tertiary sortas="RSS feeds">dans les fils RSS</tertiary></indexterm><indexterm class="startofrange" id="ch08-rss3" significance="normal"><primary>notifications</primary><secondary>fils RSS</secondary></indexterm> fournit aussi des fils RSS pratiques pour les résultats de build,
    tant pour les résultats globaux sur l'ensemble de vos builds (ou juste les
    builds d'une vue particulière), ou les résultats d'un build spécifique. Les icônes
    de fils RSS sont disponibles au bas des tableaux de bord des builds (voir <xref linkend="fig-hudson-notification-rss-view"/>) et au bas du
    panneau de l'historique des builds pour les tâches de build individuel, vous donnant accès
    soit à l'ensemble des résultats des builds, ou simplement aux builds échoués.</para>
    <figure float="0" id="fig-hudson-notification-rss-view">
      <title>Fils RSS dans Jenkins</title>
      <mediaobject id="I_mediaobject8_d1e11806">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0806.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0806.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Les URLs des fils RSS sont simples, et fonctionnent pour toute page Jenkins
    affichant un ensemble de résultats de build. Vous devez juste rajouter <filename moreinfo="none">/rssAll</filename> pour obtenir le fil RSS de tous les
    résultats de build d'une page, ou <filename moreinfo="none">/rssFailed</filename> pour
    n'obtenir que les résultats des build échoués. et <filename moreinfo="none">/rssLatest</filename> vous fournira un fil RSS
    contenant uniquement les derniers résultats de build. Mais la façon la plus simple de récupérer
    l'URL est de cliquer simplement sur l'icône RSS dans la page Jenkins
    correspondante.</para>
    <para>Il y a plétore de lecteurs RSS, à la fois commerciaux et
    open source, disponible pour pratiquement toutes les plates-formes et périphériques; ce
    peut être un excellent moyen pour garder un œil sur les résultats de build. La plupart des navigateurs
    (Firefox en particulier) et des clients email supportent les fils RSS. Certains
    lecteurs ont des problèmes avec l'authentification, cependant, si votre instance
    Jenkins est sécurisée, vous devrez peut-être faire un peu de configuration supplémentaire pour
    voir les résultats de votre build.</para>
    <para>Les fils RSS peuvent être une source d'information sur l'ensemble des résultats
    de build, et vous permettent de voir l'état de vos builds en un coup d'œil, sans
    avoir à se connecter au serveur. Néanmoins, la plupart des lecteurs RSS sont par
    nature passifs-vous pouvez consulter l'état de vos builds, mais le
    lecteur RSS ne sera généralement pas en mesure de vous notifier si un nouveau build
    en échec<indexterm id="I_indexterm8_d1e11826" class="endofrange" startref="ch08-rss1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e11828" class="endofrange" startref="ch08-rss2" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e11830" class="endofrange" startref="ch08-rss3" significance="normal"><primary/></indexterm> apparait.</para>
  </sect1>
  <sect1 id="sect-build-radiator">
    <title>Radars de build</title>
    <para>Le <indexterm class="startofrange" id="ch08-rad1" significance="normal"><primary>radars d'information</primary></indexterm><indexterm class="startofrange" id="ch08-rad2" significance="normal"><primary>radars de build</primary></indexterm><indexterm class="startofrange" id="ch08-rad3" significance="normal"><primary>notifications</primary><secondary>radars de build</secondary></indexterm><indexterm class="startofrange" id="ch08-rad4" significance="normal"><primary>radars, information</primary></indexterm>concept de radars d'information est utilisé couramment dans les cercles
    agiles. Selon le gourou agile Alistair Cockburn:</para>
    <blockquote>
      <para>Un radar d'information est un écran affiché dans un endroit que
      les gens peuvent voir quand ils travaillent ou passent. Il affiche des informations aux lecteurs
      dont ils se soucient sans avoir à poser à quelqu'un une question. Cela signifie plus de
      communication avec moins d'interruptions.</para>
    </blockquote>
    <para>Dans le contexte d'un serveur d'intégration continue, un radar d'information est un
    dispositif ou affichage éminent qui permet aux membres d'équipe et autres de facilement
    voir si l'un des builds est actuellement rompu. Il montre généralement soit un
    résumé de tous les résultats du build courant, soit seulement ceux en échec, et est
    affiché sur un grand écran plat situé bien en vue sur un mur. Cette
    sorte de radar d'information spécialisé est souvent connu comme un
    <emphasis>radar de build</emphasis>.</para>
    <para>Utilisés correctement, les radars de build sont parmi les stratégies de notification passive
    les plus efficaces. Ils sont très efficaces pour faire en sorte que
    tout le monde est conscient des build échoués. En outre, contrairement à certains des
    périphériques de retours extrèmes que nous discuterons plus tard dans ce chapitre, un radar
    de build peut contenir plusieurs tâches de build, y compris plusieurs tâches<phrase role="keep-together"> de build </phrase> échoués, et donc peut encore être efficacement
    utilisé dans un contexte d'équipes multiples.</para>
    <para>Il y a plusieurs solutions de radars de build pour Jenkins. Une des plus
    simples est d'utiliser le plugin Jenkins Radiator View. Ce plugin ajoute un nouveau
    type de tâche que vous pouvez créer: le (voir <xref linkend="fig-hudson-notification-radiator-job"/>).</para>
    <figure float="none" id="fig-hudson-notification-radiator-job">
      <title>Créer une vue radar</title>
      <mediaobject id="I_mediaobject8_d1e11873">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0807.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0807.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Configurer la vue radar est similaire à la configuration d'une
    vue liste plus conventionnelles-vous devez simplement spécifier les tâches de build que vous voulez
    inclure dans la vue, soit en les choisissant individuellement ou en utilisant une
    expression régulière.</para>
    <para>Comme la vue radar occupe tout l'écran, modifier
    ou supprimer une vue radar est un peu délicat. En fait, la seule façon d'ouvrir
    l'écran de configuration de la vue est d'ajouter
    <filename moreinfo="none">/configure</filename> à l'URL de la vue: si votre radar
    est nommé “build-<phrase role="keep-together">radiator</phrase>,” vous pouvez
    éditer la configuration de la vue en ouvrant
    <emphasis>http://my.hudson.server/view/build-radiator/configure</emphasis>.</para>
    <para>La vue radar (voir <xref linkend="fig-hudson-notification-radiator"/>) affiche une grande boite rouge ou
    jaune pour chaque build échoué ou instable, avec le nom de la tâche de build en
    lettres capitales, ainsi que d'autres détails. Vous pouvez configurer la
    la vue radar pour afficher les builds avec succès avec les builds en échec
    (ils seront affichés dans de petites boites vertes). Cependant, un bon radar
    ne devrait afficher que les builds échoués, à moins que tous les
    builds soient <indexterm id="I_indexterm8_d1e11895" class="endofrange" startref="ch08-rad1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e11897" class="endofrange" startref="ch08-rad2" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e11899" class="endofrange" startref="ch08-rad3" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e11901" class="endofrange" startref="ch08-rad4" significance="normal"><primary/></indexterm>avec succès.</para>
    <figure float="0" id="fig-hudson-notification-radiator">
      <title>Afficher une vue radar</title>
      <mediaobject id="I_mediaobject8_d1e11907">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0808.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0808.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
  </sect1>
  <sect1 id="sect-notification-instant-messaging">
    <title>Messagerie instantanée</title>
    <para>La <indexterm class="startofrange" id="ch08-im1" significance="normal"><primary>messagerie instantanée (IM)</primary></indexterm><indexterm class="startofrange" id="ch08-im2" significance="normal"><primary>notifications</primary><secondary>messagerie instantanée</secondary></indexterm><indexterm id="I_indexterm8_d1e11925" significance="normal"><primary>IM</primary><see>messagerie instantanée</see></indexterm>messagerie instantanée (ou IM) est aujourd'hui largement utilisée comme un moyen rapide,
    léger à la fois pour la communication professionnelle et personnelle.
    La messagerie instantanée est, par définition, instantanée, ce qui lui donne un avantage sur l'email
    quand il s'agit de notification rapide. Il est également «push» plutôt que
    «Pull», lorsque vous recevez un message, il apparaîtra sur votre écran et
    attire votre attention. Il est un peu plus difficile de l'ignorer ou de reporter
    qu'un simple message email.</para>
    <para>Jenkins offre un bon support pour les notifications via messagerie
    instantanée. Le<indexterm id="I_indexterm8_d1e11933" significance="normal"><primary>plugins</primary><secondary>messagerie instantanée</secondary></indexterm><indexterm id="I_indexterm8_d1e11938" significance="normal"><primary>plugin Instant Messaging</primary></indexterm> plugin Instant Messaging fournit un support générique pour
    communiquer avec Jenkins en utilisant la messagerie instantanée. Des <phrase role="keep-together">plugins </phrase>spécifiques peuvent ensuite être ajoutés
    pour les différents protocoles de messagerie instantanée telsq que Jabber et IRC.</para>
    <sect2>
      <title>Notification IM avec Jabber</title>
      <para>De<indexterm class="startofrange" id="ch08-jabber1" significance="normal"><primary>protocole Jabber</primary></indexterm><indexterm class="startofrange" id="ch08-jabber2" significance="normal"><primary>messagerie instantanée (IM)</primary><secondary>protocole Jabber pour</secondary></indexterm> nombreux serveurs de messagerie instantanée sont basés sur Jabber, un
      protocole de messagerie instantanée open source, basé sur XML. Jenkins fournit un bon
      support de la messagerie instantanée Jabber, de telle sorte que les développeurs peuvent recevoir
      des notifications en temps réel des échecs de builds. De plus, le plugin exécute
      un bot de messagerie instantanée qui écoute les canaux de chat et permet aux développeurs de lancer
      des commandes sur le serveur Jenkins via des messages chat.</para>
      <para>La mise en place du support de la messagerie instantanée dans Jenkins est simple. D'abord, vous
      devez installer à la fois le plugin Jenkins instant-messaging plugin et
      le<indexterm id="I_indexterm8_d1e11961" significance="normal"><primary>plugins</primary><secondary>Jabber Notifier</secondary></indexterm><indexterm id="I_indexterm8_d1e11966" significance="normal"><primary>plugin Jabber Notifier</primary></indexterm> plugin Jenkins Jabber notifier en utilisant la page standard du gestionnaire
      de plugins et en redémarrant Jenkins (voir <xref linkend="fig-email-notification-jabber-plugins"/>).</para>
      <figure float="0" id="fig-email-notification-jabber-plugins">
        <title>Installation des plugins Jenkins de messagerie instantanée</title>
        <mediaobject id="I_mediaobject8_d1e11975">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0809.pdf" format="PDF"/>
          </imageobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0809.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Une fois cela fait, vous devez configurer votre serveur de messagerie
      instantanée. N'importe quel serveur Jabber peut faire l'affaire. Vous pouvez utiliser un service public comme
      Google Chat, ou configurer votre propre serveur de messagerie instantanée localement (le
      serveur de chat open source Java <ulink url="http://www.igniterealtime.org/projects/openfire/index.jsp">OpenFire</ulink>
      est un bon choix). Utiliser un service public pour les communications internes
      peut être mal vu par les administrateurs système, et vous pouvez avoir
      des difficultés pour passer les firewalls de l'entreprise. Configurer votre propre
      service de chat interne, d'autre part, fait sens pour une
      équipe de développement ou organisation en général, car il fournit un autre
      canal de communication qui fonctionne bien pour des questions techniques ou
      commentaires entre les développeurs. Les exemples suivants utiliseront un
      serveur OpenFire local, mais l'approche générale fonctionne pour tout
      serveur-<phrase role="keep-together">Jabber</phrase> compatible.</para>
      <para>La première étape consiste à créer un compte dédié sur votre
      serveur Jabber pour Jenkins. Celui-ci est juste un compte de chat ordinaire, mais il
      doit être distinct de vos comptes développeurs (voir <xref linkend="fig-hudson-notification-im-users"/>).</para>
      <figure float="none" id="fig-hudson-notification-im-users">
        <title>Jenkins nécessite son propre compte de messagerie instantanée Jenkins</title>
        <mediaobject id="I_mediaobject8_d1e11995">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0810.pdf" format="PDF"/>
          </imageobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0810.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Une fois que vous avez configuré un compte de messagerie instantanée, vous devez configurer Jenkins
      pour envoyer des notifications de messagerie instantanée via ce compte. Aller à la page de configuration principale
      et cochez la case Enable Jabber Notification (voir <xref linkend="fig-hudson-notification-jabber-basic"/>). Ici, vous fournissez
      l'identifiant Jabber et mot de passe pour votre compte de messagerie instantanée. Jenkins peut habituellement
      retrouver le serveur de messagerie instantanée à partir de l'identifiant Jabber (s'il est différent, vous pouvez
      le remplacer dans les options avancées). Si vous utilisez les salons de chat en groupe
      (une autre stratégie de communication utile pour les équipes de développement), vous
      pouvez aussi fournir le nom de ces salons de discussion ici. De cette façon, Jenkins
      sera en mesure de traiter les instructions envoyées dans les salons de chat, ainsi
      que ceux reçus comme des messages directs.</para>
      <figure float="none" id="fig-hudson-notification-jabber-basic">
        <title>Mise en place de notifications de base Jabber dans Jenkins</title>
        <mediaobject id="I_mediaobject8_d1e12007">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0811.pdf" format="PDF"/>
          </imageobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0811.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>C'est tout ce dont vous avez besoin pour une configuration de base. Cependant, vous devrez peut-être
      donner quelques détails supplémentaires dans la section avancée pour des détails qui sont
      spécifiques à votre installation (voir <xref linkend="fig-hudson-notification-jabber-advanced"/>). Ici, vous pouvez
      spécifier le nom et port de votre serveur Jabber, si ils ne peuvent être
      dérivés de l'identifiant Jenkins Jabber. Vous pouvez également fournir un suffixe
      par défaut qui peut être appliqué à l'utilisateur Jenkins pour générer
      l'identifiant Jabber correspondant. Surtout, si vous avez sécurisé votre
      serveur Jenkins, vous devrez fournir un nom d'utilisateur Jenkins valide et
      mot de passe afin que le bot de messagerie instantanée puisse réagir correctement <phrase role="keep-together">à des instructions</phrase>.</para>
      <figure float="0" id="fig-hudson-notification-jabber-advanced">
        <title>Configuration avancée Jabber</title>
        <mediaobject id="I_mediaobject8_d1e12022">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0812.pdf" format="PDF"/>
          </imageobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0812.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>
      <para>Une fois que ceci est configuré, vous devez configurer une stratégie de notification Jabber
      pour chacun de vos tâches de build. Ouvrez la page de configuration de tâche de build
      et cliquez sur l'option Jabber Notification.</para>
      <para>D'abord, vous définissez une liste de destinaires pour les messages. Vous
      pouvez envoyer des messages à des individus (utilisez simplement l'identifiant Jabber correspondant,
      tel que <emphasis>joe@jabber.acme.com</emphasis>) ou à des salons de chat que vous avez
      crées. Pour les salons de chat, vous devez normalement ajouter une “*” au début
      de l'identifiant de salon de chat (e.g.,
      “*gameoflife@conference.jabber.acme.org”). Cependant, si l'identifiant de salon de chat
      contient “@conference.”, Jenkins comprendra que c'est un salon de chat
      et ajoutera automatiquement l'“*”. L'approche de salon de chat est plus
      souple, bien que vous devez avoir l'assurance que les développeurs sont connectés
      de manière permanente au salon de chat pour que cette stratégie soit véritablement
      efficace.</para>
      <para>Vous devez aussi définir une stratégie de notification. Celle-ci détermine
      lesquels de vos résultats de build provoqueront un envoi de message. Les options
      sont:</para>
      <variablelist>
        <varlistentry>
          <term>all</term>
          <listitem>
            <para>Envoie une notification pour chaque build.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>failure</term>
          <listitem>
            <para>Envoie une notification uniquement pour les builds échoués et instables.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>failure and fixed</term>
          <listitem>
            <para>Envoie une notification pour les builds échoués et instables, et
            le premier build avec succès suivant un build échoué ou instable.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>change</term>
          <listitem>
            <para>Envoie une notification quand le résultat de build change.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>Si vous utilisez les salons de chat, vous pouvez demander à Jenkins d'envoyer
      une notification au salon de chat quand un build démarre (en utilisant l'option
      “Notify on build starts”).</para>
      <para>Pour les builds démarrés par les systèmes de gestion de version, Jenkins peut aussi notifier des destinataires
      additionnels, en utilisant le suffixe par défaut décrit précédemment pour générer
      l'identifiant Jabber à partir de l'utilisateur du système de gestion de version. Vous pouvez choisir de notifier:</para>
      <variablelist>
        <varlistentry>
          <term>SCM committers</term>
          <listitem>
            <para>Tous les utilisateurs qui ont committés des changements pour le build courant,
            et donc soupçonnés d'avoir cassé le build.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SCM culprits</term>
          <listitem>
            <para>Tous les utilisateurs qui ont committés des changements depuis le dernier build avec succès.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>SCM fixers</term>
          <listitem>
            <para>Tous les utilisateurs qui ont committés des changements du premier build avec succès après un build échoué ou instable.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Upstream committers</term>
          <listitem>
            <para>Envoie une notification aux utilisateurs qui ont committés des changements pour les builds en amont ainsi que ceux de build courant. Cela fonctionne automatiquement pour les tâches de build Maven, mais
            nécessite l'activation de l'empreinte digitale (fingerprinting) pour les autres types de build.</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>Au moment de l'écriture, vous ne pouvez avoir qu'une stratégie
      de notification, de sorte que certaines des options avancées, que nous avons vu dans <xref linkend="sect-notification-advanced-email"/> ne sont pas encore possibles avec
      la messagerie instantanée.</para>
      <para>Les développeurs seront notifiés via leur client de messagerie instantanée favori (voir
      <xref linkend="fig-hudson-notification-im-messages"/>). Les développeurs peuvent
      aussi intéragir avec le serveur de build via une session de chat, en utilisant un ensemble de
      commandes simples. Quelques exemples de commandes les plus utiles sont décrites:</para>
      <itemizedlist>
        <listitem>
          <para><literal moreinfo="none">!build game-of-life</literal>—Démarre le
          build <emphasis>game-of-life</emphasis> immédiatement.</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">!build game-of-life 15m</literal>—Démarre le
          build <emphasis>game-of-life</emphasis> dans 15 minutes.</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">!comment game-of-life 207 'oops'</literal>—Ajouter
          une description à un certain build.</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">!status game-of-life</literal>—Affiche le status
          du dernier build de cette tâche de build.</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">!testresult game-of-life</literal>—Affiche le résultat complet
          du dernier build.</para>
        </listitem>
        <listitem>
          <para><literal moreinfo="none">!health game-of-life</literal>—Affiche un résumé plus
          complet de l'état de santé du dernier build.</para>
        </listitem>
      </itemizedlist>
      <para>Vous pouvez obtenir une liste complete des commandes en envoyant le message
      <literal moreinfo="none">!help</literal> à l'utilisateur<indexterm id="I_indexterm8_d1e12141" class="endofrange" startref="ch08-jabber1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e12143" class="endofrange" startref="ch08-jabber2" significance="normal"><primary/></indexterm> Jenkins.</para>
      <figure float="none" id="fig-hudson-notification-im-messages">
        <title>Messages Jenkins Jabber en action</title>
        <mediaobject id="I_mediaobject8_d1e12150">
          <imageobject role="print">
            <imagedata fileref="figs/print/jtdg_0813.pdf" format="PDF"/>
          </imageobject>
          <imageobject role="web">
            <imagedata fileref="figs/web/jtdg_0813.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </figure>
    </sect2>
    <sect2>
      <title>Notification IM Notification avec IRC</title>
      <para>Une<indexterm class="startofrange" id="ch08-irc1" significance="normal"><primary>IRC (Internet Relay Chat)</primary></indexterm><indexterm class="startofrange" id="ch08-irc3" significance="normal"><primary>messagerie instantanée (IM)</primary><secondary>IRC pour</secondary></indexterm> autre forme de messagerie instantanée Internet populaire est
      Internet Relay Chat, ou IRC. IRC est traditionnellement centré sur les groupes
      de discussions (même si la messagerie directe est également supportée), et est une
      forme très populaire de la communication pour les développeurs, en particulier dans le monde
      open source.</para>
      <para>Le<indexterm id="I_indexterm8_d1e12171" significance="normal"><primary>plugins</primary><secondary>IRC</secondary></indexterm><indexterm id="I_indexterm8_d1e12176" significance="normal"><primary>plugin IRC</primary></indexterm> plugin Jenkins IRC vous permet d'interagir avec votre serveur Jenkins
      server via un canal IRC, à la fois pour recevoir des messages de notification et pour
      envoyer des commandes au serveur. Comme le plugin Jabber, vous devez
      installer le plugin Instant Messaging pour qu'il<indexterm id="I_indexterm8_d1e12180" class="endofrange" startref="ch08-im1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e12182" class="endofrange" startref="ch08-im2" significance="normal"><primary/></indexterm> fonctionne.</para>
    </sect2>
  </sect1>
  <sect1 id="sect-notification-irc">
    <title>Notification IRC</title>
    <para>
      <emphasis>Rédigé par Juven Xu</emphasis>
    </para>
    <para>Internet Relay Chat (ou IRC) est une forme populaire de messagerie instantanée,
    conçue principalement pour la communication de groupes par canaux. Par exemple,
    Jenkins a <ulink url="http://jenkins-ci.org/content/chat">un canal
    sur Freenode</ulink> de telle façon que les utilisateurs et les développeurs peuvent échanger sur des sujets
    liés à Jenkins. Vous verrez de nombreux utilisateurs poser des questions et la plupart du temps des utilisateurs
    plus expérimentés fournir des réponses rapidement.</para>
    <para>Comme avec la messagerie instantanée avec Jabber, vous pouvez configurer
    Jenkins pour “pousser” des notifications via IRC. Quelques clients IRC tels que
    <ulink url="http://xchat.org/">xchat</ulink> supportent une confuguration d'alerte
    de telle manière que lorsqu'un message arrive, il peut faire clignoter l'icône du panneau ou faire un
    bip sonore. Pour mettre en place le support IRC dans Jenkins, vous devez d'abord
    installer<indexterm id="I_indexterm8_d1e12201" significance="normal"><primary>plugins</primary><secondary>IRC</secondary></indexterm><indexterm id="I_indexterm8_d1e12206" significance="normal"><primary>plugin IRC</primary></indexterm> le <ulink url="http://wiki.jenkins-ci.org/display/JENKINS/IRC+Plugin">plugin
    IRC</ulink> et le <ulink url="http://wiki.jenkins-ci.org/display/JENKINS/Instant+Messaging+Plugin">plugin
    Instant Messaging</ulink>. Simplement allez au gestionnaire de plugins standard, cochez
    leurs cases et ensuite redémarrez Jenkins (voir <xref linkend="hudson-notification-irc-plugins-install"/>).</para>
    <figure float="none" id="hudson-notification-irc-plugins-install">
      <title>Installation des plugins Jenkins IRC</title>
      <mediaobject id="I_mediaobject8_d1e12221">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0814.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0814.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Une fois cela fait, vous devez activer le plugin IRC plugin, et le configurer
    pour intégrer votre propre environnement. Fondamentalement, cela consiste à fournir des
    nom d'hôte et de port du serveur IRC que vous utilisez, un canal IRC
    dédié, et un surnom pour le plugin IRC. C'est une bonne pratique de mettre en place
    un canal dédié pour les notifications CI, de sorte que si les gens bavardent dans d'autres
    canaux, ils ne seront pas perturbés. Vous pouvez également configurer des détails
    supplémentaires dans la section Avancé. Tous ces éléments sont disponibles dans la
    page Configurer le système (voir <xref linkend="hudson-notification-irc-advanced"/>).</para>
    <figure float="0" id="hudson-notification-irc-advanced">
      <title>Configuration avancée des notifications IRC</title>
      <mediaobject id="I_mediaobject8_d1e12233">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0815.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0815.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>En plus de l'hôte, du port, du canal, et du surnom que nous
    mentionné précédemment, vous pouvez également configurer le mot de passe du serveur IRC de passe ou le mot de passe 
    NickServ si votre environnement l'exige. Le préfixe des commandes doit être
    configuré si vous souhaitez interagir avec le serveur via des messages IRC. C'est
    essentiellement le même que pour Jabber (voir <xref linkend="sect-notification-instant-messaging"/>). Enfin, vous voudrez peut-être
    configurer le plugin IRC pour utiliser la commande <literal role="keep-together" moreinfo="none">/notice</literal> en lieu et place de la commande par défaut
    <literal moreinfo="none">/msg</literal>. <literal moreinfo="none">/notice</literal> est identique à
    <literal moreinfo="none">/msg</literal> excepté que le message sera encadré de
    tirets, ce qui évitera une réponse de la plupart des robots.</para>
    <para>Une fois que la configuration globale est prête, vous pouvez activer la notification
    IRC pour chaque tâche de build et mettre en place une stratégie de notification. Ouvrez
    la page configuration de tâche de build, allez à la section Actions à la suite du build et
    cliquez sur l'option IRC notification. Si vous souhaitez configurer une stratégie de
    notification plutôt que d'utiliser celle par défaut, cliquez sur le bouton "Avancé ..."
    (voir <xref linkend="hudson-notification-irc-job"/>).</para>
    <figure float="0" id="hudson-notification-irc-job">
      <title>Configuration avancée de notification IRC pour une tâche de build</title>
      <mediaobject id="I_mediaobject8_d1e12261">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0816.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0816.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Les stratégies de notification (quand envoyer des messages de notification, et à
    qui) sont décrites dans <xref linkend="sect-notification-instant-messaging"/>. Tant le plugin Jabber
    que le plugin IRC dépendent du plugin Instant Messaging, de sorte qu'ils partagent un
    certain nombre de caractéristiques fondamentales communes. Certaines options sont spécifiques à l'extension IRC,
    toutefois. Ici, par exemple, vous pouvez définir un canal personnalisé si vous
    n'aimez pas la valeur par défaut globale. Enfin, pour un messsage de notification
    via un canal, vous pouvez choisir les informations à transmettre dans mes messages
    de notification. Vos options sont résumé de build, les changements de système de gestion de version, et les tests
    échoués.</para>
    <para>Une fois que vous enregistrez la configuration, vous êtes prêt à y aller. Basé sur
    ce que vous avez configuré, ce plugin va rejoindre les canaux appropriés IRC
    et envoyer des messages de notification pour les tâches de build.</para>
    <para>Dans <xref linkend="hudson-notification-irc-xchat"/>, par exemple,
    le plugin IRC rejoint le canal #ci-book sur freenode. Tout d'abord, l'utilisateur juven
    a committé quelques changements avec le message "feature x added" et le plugin IRC
    notifie tout le monde sur le canal que le build a été un succès. Puis juven
    committe un autre changement pour la fonctionnalité y, mais cette fois le build a échoué.
    John a remarqué et corrigé l'erreur de build. Le plugin IRC déclare maintenant
    "Yippie, build fixed!" Notez que certaines lignes de cet écran sont
    soulignées, c'est parce que je me suis connecté en tant qu'utilisateur "juven" et j'ai configuré
    mon client IRC XChat pour mettre en évidence les messages contenant<indexterm id="I_indexterm8_d1e12277" class="endofrange" startref="ch08-irc1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e12279" class="endofrange" startref="ch08-irc3" significance="normal"><primary/></indexterm> mon surnom.</para>
    <figure float="none" id="hudson-notification-irc-xchat">
      <title>Messages de notification IRC notification en action</title>
      <mediaobject id="I_mediaobject8_d1e12285">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0817.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0817.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
  </sect1>
  <sect1 id="sect-notification-desktop">
    <title>Notificateurs de bureau</title>
    <para>Les <indexterm class="startofrange" id="ch08-desktop1" significance="normal"><primary>notificateurs de bureau</primary></indexterm><indexterm class="startofrange" id="ch08-desktop2" significance="normal"><primary>notifications</primary><secondary>notificateurs de bureau</secondary></indexterm>meilleures stratégies de notification push s'intègrent en douceur dans
    l'environnement de travail quotidien du développeur. C'est pourquoi la messagerie instantanée peut
    être une stratégie efficace si les développeurs ont déjà l'habitude d'utiliser des
    messageries instantanées pour les autres activités liées au travail.</para>
    <para>Les outils de notification de bureau entrent aussi dans cette catégorie. Les
    outils de notification bureau sont des outils qui s'exécutent localement sur l'ordinateur du développeur,
    soit comme une application indépendante ou un widget, ou dans le cadre de
    l'outil de développement du développeur (IDE).</para>
    <para>Si vous utilisez <indexterm id="I_indexterm8_d1e12308" significance="normal"><primary>plugin Eclipse</primary></indexterm><indexterm id="I_indexterm8_d1e12311" significance="normal"><primary>plugins</primary><secondary>Eclipse</secondary></indexterm><indexterm id="I_indexterm8_d1e12316" significance="normal"><primary>Eclipse</primary><secondary>notificateurs de bureau avec</secondary></indexterm>Eclipse, le <ulink url="http://code.google.com/p/hudson-eclipse/">plugin Eclipse
    Jenkins</ulink> affiche une icône de santé au bas de la fenêtre Eclipse.
    Si vous cliquez sur l'icône, vous pouvez voir une vue détaillée des projets
    Jenkins (voir <xref linkend="fig-hudson-notification-eclipse"/>). Dans
    les préférences Eclipse, vous indiquez l'URL de votre serveur Jenkins
    avec tous les détails d'authentification requis. La configuration est assez simple,
    cependant, et vous ne pouvez vous connecter à une instance unique Jenkins pour un
    espace de travail Eclipse donné.</para>
    <figure float="none" id="fig-hudson-notification-eclipse">
      <title>Notifications Jenkins dans Eclipse</title>
      <mediaobject id="I_mediaobject8_d1e12330">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0818.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0818.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>
        Si vous utilisez
        l'IDE NetBeans<indexterm><primary>NetBeans</primary></indexterm>,
        vous avez déjà l'intégration avec Hudson et Jenkins.
        Ouvrez la fenêtre <guilabel>Services</guilabel> et ajoutez des serverus sous <guilabel>Hudson Builders</guilabel>.
        (Si vous ouvrez un projet Maven dont la section <code>ciManagement</code> indique
        <code>hudson</code> ou <code>jenkins</code> comme <code>system</code>, le serveur correspondant
        sera enregistré automatiquement.)
        Cette intégration a des caractéristiques différentes au-delà des notifications de build dans la barre d'état,
        tels que l'intégration dans la fenêtre <guilabel>Tests Results</guilabel>, l'affichage des journaux de build et des journaux de changement, navigation
        dans l'espace de travail, et un assistant de configuration de tâche de build.
    </para>
    <figure id="fig-hudson-netbeans">
        <title>Connection Jenkins dans NetBeans</title>
        <mediaobject>
            <imageobject role="web">
                <imagedata fileref="figs/web/hudson-netbeans.png" format="PNG"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para>Le <indexterm class="startofrange" id="ch08-tray1" significance="normal"><primary>plugin Tray Application</primary></indexterm><indexterm class="startofrange" id="ch08-tray2" significance="normal"><primary>plugins</primary><secondary>plugin Tray Application</secondary></indexterm>plugin Jenkins Tray Application (voir <xref linkend="fig-hudson-tray-launch"/>) vous permet de démarrer une petite application cliente Java
    à l'aide de Java Web Start à partir de votre tableau de bord de Jenkins.</para>
    <figure float="0" id="fig-hudson-tray-launch">
      <title>Lancement de l'application Jenkins Tray</title>
      <mediaobject id="I_mediaobject8_d1e12351">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0819.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0819.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Cette application se trouve dans votre barre d'état système, vous permet de visualiser l'état
    courant de vos builds en un coup d'œil, et apporte également des fenêtres pop-up
    vous informant des nouveaux échecs de build (voir <xref linkend="fig-hudson-tray"/>).</para>
    <figure float="0" id="fig-hudson-tray">
      <title>Exécution de l'application Jenkins Tray</title>
      <mediaobject id="I_mediaobject8_d1e12363">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0820.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0820.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>C'est certainement une application utile, mais elle souffre de quelques
    limitations. Au moment de l'écriture, l'application Jenkins Tray ne supporte pas
    l'accès aux serveurs sécurisés Jenkins. En outre, le développeur doit
    se souvenir de la redémarrer chaque matin. Cela peut sembler un problème mineur,
    mais en général, quand il s'agit de stratégies de notification, moins vous
    demandez à vos développeurs meilleure est la solution.</para>
    <para>Une des meilleures options pour les notifications bureau Jenkins est d'utiliser un
    service comme Notifo (voir <xref linkend="sect-notifo"/>), qui fournit
    des clients bureau et mobiles. Nous allons voir comment cela fonctionne en détail dans<indexterm id="I_indexterm8_d1e12374" class="endofrange" startref="ch08-tray1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e12376" class="endofrange" startref="ch08-tray2" significance="normal"><primary/></indexterm> la prochaine section.</para>
  </sect1>
  <sect1 id="sect-notifo">
    <title>Notifications via Notifo</title>
    <para><ulink url="http://www.notifo.com">Notifo</ulink> est <indexterm class="startofrange" id="ch08-notifo" significance="normal"><primary>Notifo</primary></indexterm><indexterm class="startofrange" id="ch08-phone" significance="normal"><primary>notifications</primary><secondary sortas="smartphones">vers les smartphones</secondary></indexterm><indexterm class="startofrange" id="ch08-phone2" significance="normal"><primary>smartphones, notifications vers</primary></indexterm>un service rapide et économique pour envoyer en temps réel
    des notifications à votre smartphone ou votre bureau. Dans le contexte d'un serveur
    Jenkins, vous pouvez l'utiliser pour mettre en place gratuitement ou à faible coût des notifications en temps réel
    pour vos résultats de builds Jenkins. Les comptes individuels (dont vous avez besoin pour être
    capable de recevoir des notifications) sont gratuits. Vous avez besoin de mettre en place un compte service
    pour envoyer des messages de notification de votre serveur Jenkins. C'est ici
    que Notifo fournit un gain pécunier, même si au moment de l'écriture un compte
    service peut envoyer jusqu'à 10 000 notifications par mois gratuitement,
    ce qui est habituellement beaucoup pour une instance moyenne Jenkins. Un des points
    forts d'un service de notification en temps réel comme Notifo est que
    les messages de notification peuvent être envoyés à ces mêmes utilisateurs sur les différents dispositifs:
    smartphones et les clients de bureau, en particulier.</para>
    <para>La mise en place des notifications Jenkins avec Notifo est relativement
    simple. Tout d'abord, allez sur le site Notifio et inscrivez vous pour créer un
    compte. Chaque membre de l'équipe qui veut être notifié aura besoin de son propre
    compte Notifo. Ils auront également besoin d'installer le client Notifo sur ​​chaque appareil
    sur lequel ils ont besoin de recevoir des messages de notification. Au moment de
    l'écriture, les clients Notifo étaient disponibles pour Windows et Mac OS X,
    et les iPhones, avec un support pour les smartphones Linux et d'autres en
    cours.</para>
    <para>Ensuite, vous devez configurer un compte de service Notifo pour votre serveur
    Jenkins. Vous pouvez faire cela avec un de vos comptes développeur, ou créer un
    nouveau compte à cet effet. Connectez-vous au site Notifo, et aller au
    menu My Services. Ici, cliquez sur Create Service (voir <xref linkend="fig-hudson-notification-notifo-service"/>), et remplissez les
    champs. Le plus important est le nom d'utilisateur de service, qui doit être
    unique. Vous pouvez également spécifier l'URL du site et l'URL de notification par défaut
    pour pointer vers votre instance Jenkins, de sorte que les utilisateurs peuvent ouvrir la console
    Jenkins en cliquant sur le message de notification.</para>
    <figure float="0" id="fig-hudson-notification-notifo-service">
      <title>Créer un service Notifo pour votre instance Jenkins</title>
      <mediaobject id="I_mediaobject8_d1e12407">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0821.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0821.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Pour recevoir des messages de notification à partir du serveur Jenkins, les développeurs
    ont maintenant besoin de souscrire à ce service. Vous pouvez ensuite ajouter les développeurs à la
    liste des abonnés sur la page Subscribers du service, en leur envoyant
    des demandes de souscription. Une fois que le service a été créé et que les utilisateurs sont
    tous abonnés, vous pouvez configurer votre projet pour envoyer des notfications
    Notifo (voir <xref linkend="fig-hudson-notification-notifo-config"/>). Vous avez besoin de fournir
    le nom d'utilisateur API du service de Jenkins-que vous mis en place, ainsi que l'API
    Secret, que vous pouvez voir tous les deux dans le tableau de bord du service Notifo.</para>
    <figure float="0" id="fig-hudson-notification-notifo-config">
      <title>Configurer les notifications Notifo dans votre tâche de build Jenkins</title>
      <mediaobject id="I_mediaobject8_d1e12419">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0822.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0822.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Une fois que cela est mis en place, Jenkins enverra en quasi temps-réel
    les notifications d'échecs de build à tous les clients Notifo que le développeur a
    lancé, que ce soit sur un bureau ou sur un appareil mobile (voir <xref linkend="fig-hudson-notifo-iphone"/>).</para>
    <figure float="0" id="fig-hudson-notifo-iphone">
      <title>Recevoir une notification Notifo sur un iPhone</title>
      <mediaobject id="I_mediaobject8_d1e12431">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0823.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0823.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Au moment de l'écriture, les stratégies de notification sophistiquées ne sont
    pas pris en charge-vous ne pouvez fournir qu'une liste de noms d'utilisateurs Notifo qui doivent être
    notifiés. Néanmoins, cela reste un outil de notification très efficace
    pour les développeurs en <indexterm id="I_indexterm8_d1e12438" class="endofrange" startref="ch08-desktop1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e12440" class="endofrange" startref="ch08-desktop2" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e12442" class="endofrange" startref="ch08-notifo" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e12444" class="endofrange" startref="ch08-phone2" significance="normal"><primary/></indexterm>ligne de front.</para>
  </sect1>
  <sect1 id="sect-notification-mobile">
    <title>Notifications mobiles</title>
    <para>Si votre <indexterm id="I_indexterm8_d1e12453" significance="normal"><primary>notifications</primary><secondary sortas="mobile devices">vers les appareils mobiles</secondary></indexterm><indexterm id="I_indexterm8_d1e12458" significance="normal"><primary>appareils mobiles, notifications vers</primary></indexterm>serveur Jenkins est visible sur Internet (même si vous avez
    mis en place une authentification sur votre serveur Jenkins), vous pouvez aussi surveiller vos
    builds via votre appareil mobile iPhone ou Android. L'application gratuite Hudson Helper
    (voir <xref linkend="fig-hudson-notification-iphone"/>),
    par exemple, vous permet de lister vos tâches de builds actuels (soit l'ensemble des tâches de
    builds sur le serveur, ou seulement les tâches de build d'une certaine vue). vous pouvez
    également afficher les détails d'une tâche de build particulière, y compris le statut
    actuel, les tests en échec et le temps de build, et même démarrer et arrêter
    les builds.</para>
    <figure float="0" id="fig-hudson-notification-iphone">
      <title>Utiliser l'application iPhone Hudson Helper</title>
      <mediaobject id="I_mediaobject8_d1e12467">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0824.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0824.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Pour les téléphones Android, vous pouvez également installer le widget Hudson Mood
    qui fournit également des mises à jour et des alertes sur les échecs de construction.</para>
    <para> Notez que ces applications mobiles s'appuient sur une connexion de données, de sorte
    qu'ils travaillent généralement bien localement, mais vous ne devriez pas compter sur eux
    si le développeur est à <indexterm id="I_indexterm8_d1e12476" class="endofrange" startref="ch08-phone" significance="normal"><primary/></indexterm>l'extérieur.</para>
  </sect1>
  <sect1 id="sect-notification-sms">
    <title>Notifications SMS</title>
    <para>Ces <indexterm class="startofrange" id="ch08-sms1" significance="normal"><primary>notifications</primary><secondary>messages SMS</secondary></indexterm><indexterm class="startofrange" id="ch08-sms2" significance="normal"><primary>messages SMS, notifications via</primary></indexterm>jours-ci, le SMS est un autre canal de communication universel qui
    a l'avantage supplémentaire d'atteindre les personnes même quand ils sont hors du
    bureau. Pour un ingénieur de build, ce peut être un excellent moyen de surveiller des builds
    critiques, même si les développeurs ou chefs d'équipe sont loin de leur
    bureau.</para>
    <para><ulink url="http://en.wikipedia.org/wiki/SMS_gateway">Les passerelles
    SMS</ulink> sont des services qui permettent <phrase role="keep-together">d'envoyer</phrase> des notifications SMS via
    des adresses emails formattées spécialement (par exemple,
    <emphasis>123456789@mysmsgateway.com</emphasis> pourrait envoyer un message SMS
    à 123456789). Beaucoup de vendeurs mobiles offrent ce service, comme le font beaucoup de
    prestataires de services tiers. Il n'y a aucune prise en charge intégrée pour les passerelles
    SMS dans Jenkins, mais la fonctionnalité de base de ces passerelles rend
    l'intégration relativement simple: il vous suffit d'ajouter les adresses emails spéciales à
    la liste de notification normale. Sinon, en utilisant la configuration email
    avancée, vous pouvez configurer une règle distincte contenant uniquement les adresses
    e-mail SMS (voir <xref linkend="fig-hudson-sms-notification-config"/>). Procéder ainsi rend
    plus facile d'affiner le contenu du message pour adhérer au format des messages
    SMS.</para>
    <figure float="0" id="fig-hudson-sms-notification-config">
      <title>Envoyer des notifictions SMS via une passerelle SMS</title>
      <mediaobject id="I_mediaobject8_d1e12508">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0825.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0825.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Une fois que vous avez fait cela, vos utilisateurs recevront une notification rapide
    des résultats de build sous forme de messages SMS (voir <xref linkend="fig-hudson-sms-notification"/>). Le principal inconvénient de cette
    approche est sans doute que ce n'est pas gratuit, et nécessite l'utilisation d'un
    service tiers commercial. Cela dit, c'est vraiment la seule
    technique de notification capable d'atteindre les développeurs quand ils sont hors de portée
    sur Internet ou qui n'ont pas un smartphone activé. En effet, cette
    technique est populaire parmi les administrateurs système, et peut être très utile
    pour certaines tâches de <indexterm id="I_indexterm8_d1e12517" class="endofrange" startref="ch08-sms1" significance="normal"><primary/></indexterm><indexterm id="I_indexterm8_d1e12519" class="endofrange" startref="ch08-sms2" significance="normal"><primary/></indexterm>build.</para>
    <figure float="0" id="fig-hudson-sms-notification">
      <title>Recevoir des notifications via SMS</title>
      <mediaobject id="I_mediaobject8_d1e12525">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0826.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0826.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
  </sect1>
  <sect1 id="sect-notification-noise">
    <title>Du bruit</title>
    <para>Si votre <indexterm id="I_indexterm8_d1e12535" significance="normal"><primary>notifications</primary><secondary>sons dans</secondary></indexterm><indexterm id="I_indexterm8_d1e12540" significance="normal"><primary>sons, dans les notifications</primary></indexterm>instance Jenkins s'exécute sur une machine qui est
    physiquement située à proximité de l'équipe de développement, vous pouvez aussi vouloir
    ajouter les sons dans l'ensemble des stratégies de notification. Cela peut être une
    stratégie efficace pour les petites équipes co-localisées, mais cela devient plus difficile
    si le serveur de build est mis en place sur une machine virtuelle ou ailleurs dans le
    bâtiment.</para>
    <para>Il y a deux façons d'intégrer des retours audio dans votre processus de build
    Jenkins: le plugin Jenkins Sounds plugin et le plugin Jenkins Speaks.
    Les deux peuvent être installés via la page du gestionnaire de plugins de la manière habituelle
    .</para>
    <para>Le<indexterm id="I_indexterm8_d1e12548" significance="normal"><primary>plugins</primary><secondary>Sounds</secondary></indexterm><indexterm id="I_indexterm8_d1e12553" significance="normal"><primary>Sounds plugin</primary></indexterm> plugin Jenkins Sounds est le plus flexible des deux. Il
    vous permet de construire une stratégie de communication détaillée basée sur le dernier
    résultat de build et aussi (facultatif) sur le résultat du précédent build
    (voir <xref linkend="fig-hudson-sounds"/>). Par exemple, vous pouvez configurer
    Jenkins pour jouer un son la première fois qu'un build échoue, un son différent
    si le build échoue une seconde fois, et encore un autre son lorsque le build est
    corrigé.</para>
    <figure float="0" id="fig-hudson-sounds">
      <title>Configurer les règles de Jenkins Sounds dans une tâche de builds</title>
      <mediaobject id="I_mediaobject8_d1e12562">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0827.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0827.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Pour le mettre en place, vous devez cocher la case à cocher Jenkins Sounds dans la
    sections des actions à la suite du build de la page de configuration de la tâche de build. Vous pouvez
    ajouter autant de règles de configuration audio que vous le souhaitez. L'ajout d'une règle est assez
    simple. Tout d'abord, vous devez choisir quel résultat de build va déclencher le
    son. Vous devez également spécifier les résultats de build précédents pour lequel la présente
    règle est applicable: Non Construit (NB), Aborté (Ab), Échec (Fa),
    Non-positif (ONU) ou Réussi (Su).</para>
    <para>Le plugin Jenkins Soubds propose une grande liste de sons pré-définis
    , qui offrent généralement beaucoup de choix pour les administrateurs de build
    les plus exigeants, mais vous pouvez ajouter votre propre son à la liste si vous le
    voulez. Les sons sont stockés dans un fichier ZIP ou JAR contenant des fichiers sonores dans
    une structure de répertoire plate (pas de sous-répertoires). La liste des sons
    proposés par le plugin est tout simplement la liste des noms de fichiers, moins
    l'extension. Le plugin supporte les formats AIFF, AU, et WAV.</para>
    <para>Dans la page de configuration système, vous pouvez indiquer à Jenkins un nouveau fichier d'archive de
    sons, en utilisant la notation <filename moreinfo="none">http://</filename>
    si votre archive de sons est disponible sur un serveur Web local, ou
    la <filename moreinfo="none">file://</filename> notation s'il est disponible
     localement (voir <xref linkend="fig-hudson-sounds-config"/>). Une fois que
    vous avez sauvé la configuration, vous pouvez tester les sons de votre archive
    archive via le bouton Test Sound dans la section Avancée.</para>
    <figure float="none" id="fig-hudson-sounds-config">
      <title>Configurer Jenkins Sounds</title>
      <mediaobject id="I_mediaobject8_d1e12584">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0828.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0828.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Le plugin Jenkins Sounds est un excellent choix si vous voulez
    compléter vos techniques de notification plus classiques. Les sont courts et
    reconnaissables sont un excellent moyen pour attirer l'attention d'un développeur et
    permettre à l'équipe de savoir que quelque chose doit être réparé. Ils seront alors un peu
    plus attentifs lorsque les notifications plus détaillées suivront.</para>
    <para>Une <indexterm id="I_indexterm8_d1e12593" significance="normal"><primary>notifications</primary><secondary>parlées</secondary></indexterm><indexterm id="I_indexterm8_d1e12598" significance="normal"><primary>Speaks plugin</primary></indexterm><indexterm id="I_indexterm8_d1e12601" significance="normal"><primary>plugins</primary><secondary>Speaks</secondary></indexterm>autre option est le plugin Jenkins Speaks. Avec ce plugin, vous
    pouvez demander à Jenkins de diffuser une annonce personnalisée (avec une voix très robotique)
    lorsque votre build échoue (voir <xref linkend="fig-hudson-speaks"/>).
    Vous pouvez configurer le message exact à l'aide de Jelly. Jelly est un langage de script
    basé sur XML largement utilisé dans les niveaux inférieurs de Jenkins.</para>
    <figure float="none" id="fig-hudson-speaks">
      <title>Configurer Jenkins Speaks</title>
      <mediaobject id="I_mediaobject8_d1e12613">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0829.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0829.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>L'avantage de cette approche réside dans sa précision: puisque vous pouvez
    utiliser des variables Jenkins dans le script Jelly, vous pouvez demander à Jenkins de dire
    ce que vous voulez sur l'état de la construction. Voici un simple
     exemple:</para>
    <programlisting id="I_programlisting8_d1e12620" format="linespecific">&lt;j:choose&gt;
  &lt;j:when test="${build.result!='SUCCESS'}"&gt;
    Votre attention, s'il vous plait. Le projet ${build.project.name} a échoué
    &lt;j:if test="${build.project.lastBuild.result!='SUCCESS'}"&gt; encore&lt;/j:if&gt;
  &lt;/j:when&gt;
  &lt;j:otherwise&gt;&lt;!-- Say nothing --&gt;&lt;/j:otherwise&gt;
&lt;/j:choose&gt;</programlisting>
    <para>Si vous laissez ce champ vide, le plugin va utiliser un modèle
    par défaut que vous pouvez configurer dans la page de configuration du système. En fait,
    c'est généralement une bonne idée de faire cela, et seulement d'utiliser script spécifique
    pour le projet si vous avez vraiment besoin.</para>
    <para>L'inconvénient est que la voix robotique est parfois peut être un peu dure
    à comprendre. Pour cette raison, c'est une bonne idée de commencer votre
    annonce par une phrase générique telle que "Votre attention s'il vous plaît», ou à
    le combiner avec le plugin Jenkins Sounds, de façon à attirer l'attention des développeurs
    avant le message réel ne soit diffusée. L'utilisation de traits d'union dans
    les noms de projets (par exemple, <emphasis>jeu-de-vie</emphasis> plutôt que
    <emphasis>jeudevie</emphasis>) aidera aussi le plugin à savoir comment
    prononcer vos noms de projet.</para>
    <para>Ces deux approches sont utiles pour les petites équipes, mais peuvent être limitées
    pour les plus grosses, lorsque le serveur n'est pas physiquement situés à
    proximité de l'équipe de développement. Les futures versions pourront supporter la lecture
    de sons sur une machine séparée, mais au moment de la rédaction de cet article ce n'était
    pas disponible.</para>
  </sect1>
  <sect1 id="sect-notification-extreme">
    <title>Appareils de retour extrème</title>
    <para>De nombreux outils de notification et stratégies plus imaginatives existent, et
    il y a de la place à l'improvisation si vous êtes prêt à improviser
    un peu avec l'électronique. Cela inclut des appareils tels que Ambient Orbs,
    Lava Lamps, feux de circulation, ou d'autres appareils USB plus exotiques.
    Le radiateur de build (voir <xref linkend="sect-build-radiator"/>) tombe aussi
    dans cette catégorie si on le projette sur un écran assez grand.</para>
    <para>Un <indexterm id="I_indexterm8_d1e12643" significance="normal"><primary>notifications</primary><secondary sortas="Nabaztag">utilisant Nabaztag</secondary></indexterm>appareil qui s'intègre très bien avec avec Jenkins est le
    Nabaztag. Le Nabaztag (voir <xref linkend="fig-hudson-nabaztag"/>) est un
    lapin robot WiFi très populaire qui peut clignoter des ampoules colorées, jouer
    de la musique, ou même de parler. Un des avantages du Nabaztag, c'est que, étant donné qu'il
    fonctionne via Wifi, il n'est pas contraint à être situé à proximité du serveur de build,
    et fontionnera même si votre instance Jenkins est dans une salle de serveurs ou sur une
    machine virtuelle. En ce qui concerne les appareils de retour extrêmes, ces petits
    compagnos sont difficiles à battre.</para>
    <figure float="0" id="fig-hudson-nabaztag">
      <title>Un Nabaztag</title>
      <mediaobject id="I_mediaobject8_d1e12654">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0830.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0830.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>Et <indexterm id="I_indexterm8_d1e12661" significance="normal"><primary>plugin Nabaztag</primary></indexterm><indexterm id="I_indexterm8_d1e12664" significance="normal"><primary>plugins</primary><secondary>Nabaztag</secondary></indexterm>encore mieux, il existe un plugin Jenkins pour le
    Nabaztag. Une fois que vous avez installé le plugin Nabaztag et redémarré
    Jenkins, il est facile à configurer. Dans la page de configuration principale de Jenkins, rendez-vous
    à la section Paramètres globaux de Nabaztag et entrez le numéro de série et
    jeton secret pour votre lapin électronique (voir <xref linkend="fig-hudson-nabaztag-config"/>). Vous pouvez également fournir des
    règlages par défaut sur ​​la façon dont votre lapin de build devrait réagir aux changements dans
    l'état de build (doit il signaler sur les départs ou succès de build, par
    exemple), quelle voix utiliser, et quel message dire quand un
    build échoue, réussit, est fixé, ou échoue à nouveau. Puis, pour activer
    les notifications Nabaztag pour une tâche de build particulière, vous devez cocher la
    l'option publication Nabaztag dans la configuration de votre tâche de build. <phrase role="keep-together">Selon</phrase> votre environnement, par exemple,
    vous voulez ou pas que tous vos builds envoient des notifications à votre
    Nabaztag.</para>
    <figure float="0" id="fig-hudson-nabaztag-config">
      <title>Configurer votre Nabaztag</title>
      <mediaobject id="I_mediaobject8_d1e12678">
        <imageobject role="print">
          <imagedata fileref="figs/print/jtdg_0831.pdf" format="PDF"/>
        </imageobject>
        <imageobject role="web">
          <imagedata fileref="figs/web/jtdg_0831.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <para>À l'exception notable du radiateur de build, nombre de ces
    dispositifs ont des limitations semblables aux plugins Jenkins Speaks et Jenkins Sounds
    (voir <xref linkend="sect-notification-noise"/>)-ils sont les mieux
    adaptés pour les équipes petites, co-localisées, travaillant sur un nombre limité de
    projets. Néanmoins, quand ils fonctionnent, ils peuvent être un complément utile à
    votre stratégie de notification générale.</para>
  </sect1>
  <sect1 id="sect-notification-conclusion">
    <title>Conclusion</title>
    <para>La notification est une partie essentielle de votre stratégie globale d'intégration continue. Après tout,
    un build a échoué est de peu d'utilité s'il n'y a personne à l'écoute. Ce n'est pas non plus
    un problème universel. Vous devez penser à votre
    organisation, et adapter votre stratégie pour l'adapter à la culture de l'entreprise locale
    et l'ensemble d'outils utilisés.</para>
    <para>En effet, il est important de définir et de mettre en œuvre une stratégie de notificatio
    bien pensée qui convient à votre environnement. Le mail, par exemple, est
    omniprésent, donc ce sera l'épine dorsale de nombreuses stratégies de
    notification, mais si vous travaillez dans une grande équipe ou avec un responsable technique occupé,
    vous devrez peut-être envisager de mettre en place une stratégie progressive basée sur
    les options de messagerie avancées (voir <xref linkend="sect-notification-advanced-email"/>). Mais vous devrez compléter
    cette dernière avec une des stratégies plus actives, telles que la messagerie instantanée ou
    la notification de bureau. Si votre équipe utilise déjà un canal de discussion IRC pour
    communiquer, essayez de l'intégrer dans votre stratégie de notification
    aussi. Et la notification par SMS est une grande stratégie pour les tâches de build vraiment critiques.</para>
    <para>Vous devez également veiller à ce que vous avez à la fois des stratégies de notification
    passives et actives. Un radiateur de build visible ou un
    appareil de retour extrême, par exemple, envoie un message fort à l'équipe
    que la correction des builds est une tâche prioritaire, et peut aider à installer une culture plus agile
    à l'équipe.</para>
  </sect1>
</chapter>
