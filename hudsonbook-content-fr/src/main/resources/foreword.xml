<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<preface id="foreword">
  <prefaceinfo>
    <author>
      <firstname>Kohsuke</firstname>

      <surname>Kawaguchi</surname>

      <affiliation>
        <jobtitle>Créateur du projet Jenkins et Architecte chez
        CloudBees</jobtitle>
      </affiliation>
    </author>
  </prefaceinfo>

  <title>Avant-propos</title>

  <para>Il y a 7 ans, j'ai écrit la première ligne de code qui a démarré
  le projet aujourd'hui connu sous le nom de Jenkins, appelé
  à l'origine Hudson. J'avais l'habitude d'être celui qui cassait le build,
  j'avais donc besoin d'un programme qui attrape mes erreurs avant que mes
  collègues ne le fassent. C'était juste un outil simple qui faisait une chose
  simple. Cependant, il a rapidement évolué et j'aime aujourd'hui à penser que c'est
  le serveur d'intégration continue dominant sur le marché, incluant un large
  écosystème de plugins, des distributions commerciales, du
  Jenkins-as-a-Service hébergé, des groupes utilisateurs, des rencontres
  utilisateurs, des formations, etc.</para>

  <para>Comme la plupart de mes autres projets, celui-ci a été open-sourcé dès
  son commencement. Au cours de sa vie il a reposé essentiellement sur l'aide
  et l'amour d'autres personnes, sans lesquelles ce projet ne serait pas dans
  son état actuel. Durant ce temps, j'ai aussi appris une chose ou deux sur
  comment faire fonctionner des projets open source. Par cette expérience, j'ai
  constaté que les gens ignorent souvent qu'il y a plusieurs façons d'aider un
  projet open-source, et qu'écrire du code n'en est qu'une parmi d'autres. On
  peut en parler autour de soi, aider les autres utilisateurs, organiser des
  conférences, et oui, on peut écrire de la documentation.</para>

  <para>En ce sens, John est une part importante de la communauté Jenkins,
  même s'il n'a pas fourni de code, il rend Jenkins plus
  approchable pour les nouveaux utilisateurs. Par exemple, il a un blog
  populaire suivi par de nombreuses personnes, où il parle régulièrement de
  pratiques d'intégration continue et d'autres sujets de développement
  logiciel. Il a du talent pour expliquer les choses afin que même des
  utilisateurs néophytes puissent les comprendre, ce qui est souvent difficile
  pour des gens comme moi qui développent Jenkins jour après jour. Il est aussi
  connu pour ses formations, dont Jenkins fait partie. C'est encore une autre
  façon par laquelle il rend Jenkins accessible à davantage de personnes. Il a
  clairement une passion pour évangéliser de nouvelles idées et enseigner à
  ses pairs développeurs comment être plus productifs.</para>

  <para>Ces temps-ci je consacre mon temps chez CloudBees à la version Open
  Source de Jenkins, à la version pro sur laquelle nous construisons des
  plugins, et à faire fonctionner Jenkins dans les <emphasis>clouds</emphasis>
  privés et publics avec le service DEV@cloud de CloudBees. Dans ce rôle j'ai
  maintenant plus d'interactions avec John qu'auparavant, et mon respect pour
  sa passion n'a fait qu'augmenter.</para>

  <?dbfo-need height=”1in”?>

  <para>J'étais donc véritablement ravi qu'il s'occupe de l'immense tâche
  qui consiste à écrire un livre sur Jenkins. Cela donne une formidable vue
  d'ensemble des principaux ingrédients de l'intégration continue. En plus, à titre
  personnel, comme on me demande souvent s'il y a un livre sur Jenkins, je
  pourrai enfin répondre à cette question par l'affirmative. Mais plus
  important encore, ce livre reflète entre autre, sa passion et sa longue expérience
  dans l'enseignement de Jenkins. Mais ne me croyez pas sur
  parole, vous devez le lire pour le voir de vous-même.</para>
</preface>
